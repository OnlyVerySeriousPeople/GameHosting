services:
  authDb:
    image: postgres:latest
    container_name: postgresAuth
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: authDb
        PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    ports:
     - "5433:5432"
    volumes:
     - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
       - net

  authCache:
    image: redis:latest
    container_name: redisAuth
    restart: always
    ports:
    - "6379:6379"
    networks:
       - net

  authService:
    image: auth
    build:
      context: .
      dockerfile: src/Services/AuthService.Dotnet/AuthService.Dotnet.Grpc/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5050
      - ConnectionStrings__Postgres=Server=authDb;Port=5432;Database=authDb;User Id=postgres;Password=postgres;IncludeErrorDetail=true
      - ConnectionStrings__Redis=authCache:6379
      - Gateway__Url=http://localhost:5000
    container_name: authService
    ports:
      - "5050:5050"
    depends_on:
      - authDb
      - authCache
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
       - net

  game_service:
    build: src/Services/GameService.Nodejs
    ports: ["8080:8080"]
    depends_on: [game_db]
    networks: [net]

  game_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports: ["5434:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [net]

  leaderboard_db:
    image: mongo
    restart: always
    ports: ["27017:27017"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: db
    volumes:
      - mongo_data:/data/db
    networks: [net]

  leaderboard_cache:
    image: redis
    command: redis-server --requirepass "password"
    ports: ["6380:6379"]
    networks: [net]


  leaderboard_service:
    build: src/Services/LeaderboardService.Nodejs
    ports: ["8081:8080"]
    depends_on: [leaderboard_db]
    networks: [net]

  match_service:
    build: src/Services/MatchService.Nodejs
    ports: ["8082:8080"]
    networks: [net]

  aggregator: 
    image: aggregator
    build:
      context: .
      dockerfile: src/Aggregator.Dotnet/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
      - GrpcSettings__AuthServiceUrl=http://authService:5050
      - GrpcSettings__GameServiceUrl=http://game_service:8080
      - GrpcSettings__LeaderboardServiceUrl=http://leaderboard_service:8080
    container_name: aggregator
    ports:
      - "5000:5000"
    depends_on:
      - authService
      - game_service
      - leaderboard_service
      - match_service
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
       - net

networks:
  net:
    driver: bridge

volumes:
  pgdata:
    driver: local
  mongo_data:
